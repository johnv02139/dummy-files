<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--suppress ALL -->
<project name="DummyFiles" default="help"
         xmlns:ivy="antlib:org.apache.ivy.ant">

  <property name="src.main" value="src/main" />
  <property name="src.test" value="src/test" />
  <property name="build" value="out" />
  <property name="lib" value="lib" />
  <property name="rel" value="release" />

  <property name="dist" value="dist" />
  <property name="etc" value="etc" />
  <property name="docs" value="docs" />

  <property file="build.properties" />

  <property name="jarfile" location="${dist}/${ant.project.name}.jar"/>

  <property name="logging.file" value="${src.main}/log4j2.xml" />

  <property name="version.file" value="${src.main}/dummyfiles.version" />
  <loadfile property="version" srcFile="${version.file}">
    <filterchain>
      <striplinebreaks />
    </filterchain>
  </loadfile>

  <property name="rel.name" value="dummy-files-${version}" />
  <property name="jar.builtBy" value="https://github.com/johnv02139/dummy-files" />
  <property name="jar.mainClass" value="org.jvfs.dummyfiles.Launcher" />

  <path id="classpath">
    <fileset dir="${lib}" id="classpath.runtime">
    </fileset>
  </path>

  <path id="classpath.test">
    <path refid="classpath" />
    <fileset dir="${lib}" />

    <pathelement location="${build}" />
  </path>

  <target name="help" description="show available targets">
    <java classname="org.apache.tools.ant.Main">
      <arg value="-projecthelp" />
      <arg value="-buildfile" />
      <arg value="${ant.file}" />
    </java>
  </target>

  <target name="clean">
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${docs}" includes="**/*" />
      <fileset dir="${build}" includes="**/*" />
      <fileset dir="${dist}" includes="**/*" />
    </delete>
  </target>

  <target name="init" description="prepare for a build">
    <mkdir dir="${build}" />
    <mkdir dir="${dist}" />
  </target>

  <target name="resolve" description="retrieve dependencies with ivy">
    <ivy:retrieve/>
  </target>

  <target name="compile" depends="init" description="compile the main classes">
    <javac srcdir="${src.main}" destdir="${build}" classpathref="classpath"
           debug="true" debuglevel="lines,vars,source" includeantruntime="false"
           target="1.8" source="1.8" />
    <copy file="${version.file}" todir="${build}" />
    <copy file="${logging.file}" todir="${build}" />
  </target>

  <target name="dist" depends="compile" description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Put everything in ${build} into the jar file -->
    <jar jarfile="${jarfile}" basedir="${build}" />
  </target>

  <target name="compile.test" depends="dist" description="compile the test classes">
    <javac srcdir="${src.test}" destdir="${build}" classpathref="classpath.test"
           debug="true" debuglevel="lines,vars,source" includeantruntime="false" />
    <copy file="${version.file}" todir="${build}" />
  </target>

  <target name="test" depends="clean, compile.test" description="run junit tests">
    <junit haltonerror="true" haltonfailure="true" printsummary="true" fork="no" forkmode="once">
      <formatter type="plain" usefile="false" />

      <classpath refid="classpath.test" />

      <batchtest>
        <fileset dir="${src.test}" includes="**/*Test.java" />
      </batchtest>
    </junit>
  </target>

  <target name="init-checkstyle" description="ensure checkstyle libraries">
    <path id="checkstyle.lib.path">
      <fileset dir="${lib}">
        <include name="checkstyle-7.1.1.jar" />
        <include name="guava-19.0.jar" />
        <include name="commons-beanutils-1.9.2.jar" />
        <include name="commons-cli-1.3.1.jar" />
        <include name="commons-collections-3.2.2.jar" />
        <include name="commons-logging-1.1.1.jar" />
        <include name="antlr-2.7.7.jar" />
        <include name="antlr4-runtime-4.5.3.jar" />
      </fileset>
    </path>
    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
             classpathref="checkstyle.lib.path"/>
  </target>

  <target name="checkstyle" depends="init-checkstyle"
          description="generate a report of code convention violations">
    <checkstyle config="etc/checks.xml">
      <fileset dir="src" includes="**/*.java"/>
    </checkstyle>
  </target>

  <target name="findbugs" depends="compile.test, checkstyle" description="run findbugs on the code">
    <ivy:cachepath pathid="findbugs.classpath" conf="findbugs"/>
    <taskdef name="findbugs"
             classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
             classpathref="findbugs.classpath"/>
    <findbugs output="html"
              reportLevel="low"
              excludeFilter="${etc}/exclude.xml"
              outputFile="${build}/fbugs.html" >
      <auxClasspath refid="classpath"/>
      <auxClasspath refid="classpath.test"/>
      <classpath refid="findbugs.classpath"/>
      <class location="${build}"/>
    </findbugs>
  </target>

  <target name="javadoc" description="generate javadoc">
    <javadoc destdir="docs/api"
             noqualifier="all"
             author="true"
             version="true"
             use="true"
             access="private"
             classpathref="classpath"
             windowtitle="Dummy Files Documentation">

      <packageset dir="${src.main}" defaultexcludes="yes">
        <include name="org/jvfs/**"/>
      </packageset>
      <packageset dir="${src.test}" defaultexcludes="yes">
        <include name="org/jvfs/**"/>
      </packageset>

      <doctitle><![CDATA[<h1>Dummy Files</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2018 John Valente. All Rights Reserved.</i>]]></bottom>
      <link href="http://docs.oracle.com/javase/8/docs/api/"/>
    </javadoc>
  </target>

</project>
